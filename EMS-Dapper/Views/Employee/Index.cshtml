@* @model EMS_Dapper.Models.Employee *@
@* <h1>Employee Lists</h1> *@
@* <table id="employeeTable" class="table"> *@
@*     <thead> *@
@*         <tr> *@
@*             <th>Name</th> *@
@*             <th>Email</th> *@
@*             <th>Department</th> *@
@*             <th>Designation</th> *@
@*             <th>Action</th> *@
@*         </tr> *@
@*     </thead> *@
@*     <tbody> *@
        @* @foreach (var Employee in Model.Employees) *@
        @* { *@
        @*     <tr> *@
        @*         <td>@Employee.EmployeeName</td> *@
        @*         <td>@Employee.Email</td> *@
        @*         <td>@Employee.DepartmentName</td> *@
        @*         <td>@Employee.DesignationName</td> *@
        @*         <td> *@
        @*             <a asp-controller="Employee" asp-action="EditEmployee" asp-route-id="@Employee.Id"> Edit </a> *@
        @*         </td> *@
        @*         <td> *@
        @*             <a asp-controller="Employee" asp-action="DeleteEmployee" asp-route-id="@Employee.Id"> Delete </a> *@
        @*         </td> *@
        @*     </tr> *@
        @* } *@
@*     </tbody> *@
@* </table> *@
@* <a asp-controller="Employee" asp-action="CreateEmployee" class="btn btn-primary">Add New Employee</a> *@

@* Pagination through View *@
@* <div class="container"> *@
@* <div class="pagination justify-content-end"> *@
@*     @if (Model.CurrentPage > 1) *@
@*     { *@
@*         <!-- First Page Button --> *@
@*         <a class="page-link " asp-action="Index" asp-route-page="1">First</a> *@

@*         <!-- Previous Page Button --> *@
@*         <a class="page-link " asp-action="Index" asp-route-page="@((Model.CurrentPage - 1))">Previous</a> *@
@*     } *@

@*     <!-- Page Numbers --> *@
@*     @for (var i = 1; i <= Model.TotalPages; i++) *@
@*     { *@
@*         <a class="page-link @((i == Model.CurrentPage) ? "active" : "")" asp-action="Index" asp-route-page="@i"> *@
@*             @i *@
@*         </a> *@
@*     } *@
@*     @if (Model.CurrentPage < Model.TotalPages) *@
@*     { *@
@*         <!-- Next Page Button --> *@
@*         <a class="page-link" asp-action="Index" asp-route-page="@((Model.CurrentPage + 1))">Next</a> *@

@*         <!-- Last Page Button --> *@
@*         <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">Last</a> *@
@*     } *@
@* </div> *@
@* </div> *@

@* <form method="get" class="form-inline mb-3"> *@
@*     <label for="pageSize" class="mr-2">Rows per page:</label> *@
@*     <select id="pageSize" name="pageSize" class="form-control" onchange="this.form.submit()"> *@
@*         @{ *@
@*             var pageSizes = new[] { 5, 10, 20, 50 }; *@
@*             foreach (var size in pageSizes) *@
@*             { *@
@*                 if (Model.PageSize == size) *@
@*                 { *@
@*                     @: *@
@*                     <option value="@size" selected>@size</option> *@
@*                 } *@
@*                 else *@
@*                 { *@
@*                     @: *@
@*                     <option value="@size">@size</option> *@
@*                 } *@
@*             } *@
@*         } *@
@*     </select> *@
@*     <input type="hidden" name="page" value="@Model.CurrentPage" /> *@
@* </form> *@



@* <div class="container"> *@
@*     <div class="pagination justify-content-end"> *@

@*         @if (Model.CurrentPage > 1) *@
@*         { *@
@*             <a class="page-link" asp-action="Index" asp-route-page="1">First</a> *@
@*             <a class="page-link" asp-action="Index" asp-route-page="@((Model.CurrentPage - 1))">Previous</a> *@
@*         } *@

@*         @for (var i = 1; i <= Model.TotalPages; i++) *@
@*         { *@
@*             <a class="page-link @((i == Model.CurrentPage) ? "active" : "")" asp-action="Index" asp-route-page="@i">@i</a> *@
@*         } *@

@*         @if (Model.CurrentPage < Model.TotalPages) *@
@*         { *@
@*             <a class="page-link" asp-action="Index" asp-route-page="@((Model.CurrentPage + 1))">Next</a> *@
@*             <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">Last</a> *@
@*         } *@

@*     </div> *@
@* </div> *@
@* <div id="paginationControls" class="pagination justify-content-end"> *@
@*     <!-- Pagination controls will be populated here via AJAX --> *@
@* </div> *@

@* <a href="@Url.Action("CreateEmployee")" class="btn btn-primary">Add New Employee</a> *@

@* @* Include jQuery and SweetAlert *@ 
@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@* <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> *@

@* <script> *@
@*     $(document).ready(function () { *@
@*         const pageSize = 10; *@
@*         let currentPage = 1; *@

@*         function loadEmployees(page) { *@
@*             $.get('@Url.Action("GetEmployees", "Employee")', { page: page, pageSize: pageSize }, function (data) { *@
@*                 let rows = ''; *@
@*                 $.each(data.employees, function (index, employee) { *@
@*                     rows += `<tr> *@
@*                         <td>${employee.employeeName}</td> *@
@*                         <td>${employee.email}</td> *@
@*                         <td>${employee.departmentName}</td> *@
@*                         <td>${employee.designationName}</td> *@
@*                         <td> *@
@*                             <a href="@Url.Action("EditEmployee", "Employee", new { id = "__id__" })".replace('__id__', employee.id)">Edit</a> *@
@*                             <button class="btn btn-danger btn-sm delete-btn" data-id="${employee.id}">Delete</button> *@
@*                         </td> *@
@*                     </tr>`; *@
@*                 }); *@
@*                 $('#employeeTable tbody').html(rows); *@

@*                 let pagination = ''; *@
@*                 for (let i = 1; i <= data.totalPages; i++) { *@
@*                     pagination += `<li class="page-item ${i === page ? 'active' : ''}"> *@
@*                         <a class="page-link" href="#">${i}</a> *@
@*                     </li>`; *@
@*                 } *@
@*                 $('#paginationControls').html(`<ul class="pagination">${pagination}</ul>`); *@
@*             }); *@
@*         } *@

@*         $(document).on('click', '.page-link', function (e) { *@
@*             e.preventDefault(); *@
@*             currentPage = parseInt($(this).text()); *@
@*             loadEmployees(currentPage); *@
@*         }); *@

@*         $(document).on('click', '.delete-btn', function () { *@
@*             const employeeId = $(this).data('id'); *@
@*             Swal.fire({ *@
@*                 title: 'Are you sure?', *@
@*                 text: 'Once deleted, you will not be able to recover this employee!', *@
@*                 icon: 'warning', *@
@*                 showCancelButton: true, *@
@*                 confirmButtonText: 'Yes, delete it!', *@
@*                 cancelButtonText: 'No, cancel!', *@
@*                 reverseButtons: true *@
@*             }).then((result) => { *@
@*                 if (result.isConfirmed) { *@
@*                     $.post('@Url.Action("DeleteEmployee", "Employee")', { id: employeeId }, function (response) { *@
@*                         if (response.success) { *@
@*                             Swal.fire('Deleted!', 'The employee has been deleted.', 'success'); *@
@*                             loadEmployees(currentPage); // Reload employees *@
@*                         } else { *@
@*                             Swal.fire('Failed!', 'There was an issue deleting the employee.', 'error'); *@
@*                         } *@
@*                     }); *@
@*                 } *@
@*             }); *@
@*         }); *@

@*         loadEmployees(currentPage); // Initial load *@
@*     }); *@
@* </script> *@
@* @{ *@
@*     ViewData["Title"] = "Employee List"; *@
@* } *@

@* <h2>Employee List</h2> *@

@* <table class="table table-bordered" id="employeeTable"> *@
@*     <thead> *@
@*         <tr> *@
@*             <th>Name</th> *@
@*             <th>Email</th> *@
@*             <th>Department</th> *@
@*             <th>Designation</th> *@
@*             <th>Actions</th> *@
@*         </tr> *@
@*     </thead> *@
@*     <tbody> *@
@*         <!-- Filled by jQuery AJAX --> *@
@*     </tbody> *@
@* </table> *@

@* <div class="pagination justify-content-end" id="paginationControls"> *@
@*     <!-- Filled by jQuery AJAX --> *@
@* </div> *@

@* <a href="@Url.Action("CreateEmployee", "Employee")" class="btn btn-primary">Add New Employee</a> *@

@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@* <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> *@

@* <script> *@
@*     $(document).ready(function () { *@
@*         const pageSize = 5; *@
@*         let currentPage = 1; *@

@*         function loadEmployees(page) { *@
@*             $.get('/Employee/GetPagedEmployees', { page: page, pageSize: pageSize }, function (data) { *@
@*                 let rows = ''; *@
@*                 $.each(data.employees, function (index, emp) { *@
@*                     rows += ` *@
@*                         <tr> *@
@*                             <td>${emp.employeeName}</td> *@
@*                             <td>${emp.email}</td> *@
@*                             <td>${emp.departmentName}</td> *@
@*                             <td>${emp.designationName}</td> *@
@*                             <td> *@
@*                                 <a href="/Employee/EditEmployee/${emp.id}" class="btn btn-sm btn-warning">Edit</a> *@
@*                                 <button class="btn btn-sm btn-danger delete-btn" data-id="${emp.id}">Delete</button> *@
@*                             </td> *@
@*                         </tr> *@
@*                     `; *@
@*                 }); *@
@*                 $('#employeeTable tbody').html(rows); *@

@*                 // Pagination controls *@
@*                 let pagination = ''; *@
@*                 for (let i = 1; i <= data.totalPages; i++) { *@
@*                     pagination += ` *@
@*                         <li class="page-item ${i === data.currentPage ? 'active' : ''}"> *@
@*                             <a class="page-link" href="#" data-page="${i}">${i}</a> *@
@*                         </li> *@
@*                     `; *@
@*                 } *@
@*                 $('#paginationControls').html(`<ul class="pagination">${pagination}</ul>`); *@
@*             }); *@
@*         } *@

@*         // Load initial data *@
@*         loadEmployees(currentPage); *@

@*         // Handle pagination clicks *@
@*         $(document).on('click', '.page-link', function (e) { *@
@*             e.preventDefault(); *@
@*             currentPage = parseInt($(this).data('page')); *@
@*             loadEmployees(currentPage); *@
@*         }); *@

@*         // Handle delete with SweetAlert *@
@*         $(document).on('click', '.delete-btn', function () { *@
@*             const id = $(this).data('id'); *@
@*             Swal.fire({ *@
@*                 title: 'Are you sure?', *@
@*                 text: 'This action cannot be undone!', *@
@*                 icon: 'warning', *@
@*                 showCancelButton: true, *@
@*                 confirmButtonColor: '#d33', *@
@*                 cancelButtonColor: '#3085d6', *@
@*                 confirmButtonText: 'Yes, delete it!' *@
@*             }).then((result) => { *@
@*                 if (result.isConfirmed) { *@
@*                     $.post('/Employee/DeleteEmployeeAjax', { id: id }, function (res) { *@
@*                         if (res.success) { *@
@*                             Swal.fire('Deleted!', 'Employee has been deleted.', 'success'); *@
@*                             loadEmployees(currentPage); *@
@*                         } else { *@
@*                             Swal.fire('Error', res.message, 'error'); *@
@*                         } *@
@*                     }); *@
@*                 } *@
@*             }); *@
@*         }); *@
@*     }); *@
@* </script> *@


@model EMS_Dapper.Models.Pager

<h4>Employees per Department</h4>
<canvas id="departmentChart" width="500" height="350"></canvas>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    $(document).ready(function () {
        $.get('/Employee/GetDepartmentChartData', function (data) {
            const labels = data.map(d => d.departmentName);
            const values = data.map(d => d.employeeCount);

            const ctx = document.getElementById('departmentChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Employees per Department',
                        data: values,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,  // Disable aspect ratio to allow resizing
                    plugins: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: 'Employee Count by Department'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            precision: 0
                        }
                    }
                }
            });
        });
    });
</script>


    



<h2>Employee List</h2>

<table class="table table-bordered" id="employeeTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Department</th>
            <th>Designation</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="employeeTableBody">
        @await Html.PartialAsync("_EmployeeRowsPartial", Model.Employees)
    </tbody>
</table>

<div class="pagination justify-content-end" id="paginationControls">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="#" data-page="1">First</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#" data-page="@(Model.CurrentPage - 1)">Previous</a>
            </li>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="#" data-page="@i">@i</a>
            </li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="#" data-page="@(Model.CurrentPage + 1)">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#" data-page="@Model.TotalPages">Last</a>
            </li>
        }
    </ul>
</div>

<a href="@Url.Action("CreateEmployee", "Employee")" class="btn btn-primary">Add New Employee</a>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        const pageSize = @Model.PageSize;

        function loadPage(page) {
            $.get('/Employee/GetPageData', { page: page, pageSize: pageSize }, function (data) {
                $('#employeeTableBody').html(data);
                window.location.href = '/Employee/Index?page=' + page + '&pageSize=' + pageSize;
            });
        }

        $(document).on('click', '.page-link', function (e) {
            e.preventDefault();
            debugger;
            const page = $(this).data('page');
            loadPage(page);
        });

        $(document).on('click', '.delete-btn', function () {
            const id = $(this).data('id');
            debugger;
            Swal.fire({
                title: 'Are you sure?',
                text: "This action cannot be undone!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('/Employee/DeleteEmployeeAjax', { id: id }, function (res) {
                        if (res.success) {
                            Swal.fire('Deleted!', 'Employee has been deleted.', 'success');
                            loadPage(@Model.CurrentPage);
                        } else {
                            Swal.fire('Error', res.message, 'error');
                        }
                    });
                }
            });
        });
    });
</script>

<style>
    #departmentChart {
        max-width: 500px;
        max-height: 300px;
        width: 100%;
        height: auto;
    }
</style>




